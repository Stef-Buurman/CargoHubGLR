name: Python application

on:
  push:
    branches: [ "88-create-workflow-to-run-the-project" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Run the application
      run: |
        # Command to run your Python application (e.g., python app.py or similar)
        python api/main.py
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  test: 
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
        cache: 'pip'
    - name: Install dependencies
      run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Start the application in the background
      run: |
          # Run the Python application inside the api folder in the background
          python api/main.py &
          sleep 5  # Adjust sleep time if needed to allow the app to start
    - name: Test with pytest
      run: |
          python -m pytest
          coverage run -m pytest
    - name: Run code coverage
      run: |
        # Run coverage report
        #coverage xml

        # Report and write to summary.
        coverage report --format=markdown >> $GITHUB_STEP_SUMMARY

        # Report again and fail if under 100%.
        coverage report --fail-under=90
    - name: Store coverage report
      uses: actions/upload-artifact@v4
      with:
        path: coverage.xml
      if: ${{ failure() }}
